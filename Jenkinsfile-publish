pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                sh 'chmod +x gradlew'
                sh './gradlew clean build -x test'
            }
        }
        stage('Test') {
            steps {
                sh './gradlew test'
            }
        }
        stage('Publish') {
            environment { 
                PUBLISH_KEY = credentials('gradle.publish.key')
                PUBLISH_SECRET = credentials('gradle.publish.secret') 
            }
            steps {
                sh "./gradlew -Dgradle.publish.key=${PUBLISH_KEY} -Dgradle.publish.secret=${PUBLISH_SECRET} publishPlugins"
            }
        }
        stage('Tag Release') {
            steps {
                script {
                    def version = sh (
                        script: "./gradlew properties -q | grep \"version:\" | awk '{print \$2}'",
                        returnStdout: true
                    ).trim()
                    sh "git tag -a ${version} -m \"Release ${version}\""
                    withCredentials([usernamePassword(credentialsId: 'github.key', usernameVariable: 'GITHUB_USERNAME', passwordVariable: 'GITHUB_KEY')]) {
                        sh 'git push https://${GITHUB_USERNAME}:${GITHUB_KEY}@github.com/sidney-simmons/gradle-plugin-external-properties.git --tags'
                    }
                }
            }
        }
    }
    post {
        cleanup {
            deleteDir()
        }
    }
}